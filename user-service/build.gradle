plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.raccoon.learnapp'
version = '0.2-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    raccoonCommonVersion = '0.7-SNAPSHOT'
    mapstructVersion = '1.4.2.Final'
}

dependencies {
    implementation "com.raccoon.learnapp:common:${raccoonCommonVersion}"

    // todo: control versions
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.postgresql:postgresql'

    implementation 'org.apache.commons:commons-lang3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

configurations.all {
    exclude module: 'spring-boot-starter-logging'
    exclude module: 'hamcrest-core'
}

tasks.named('test') {
    useJUnitPlatform()
}

task servicePreparation {
    group 'build'
    dependsOn ':common:publishToMavenLocal'
    dependsOn 'clean'
    dependsOn 'build'
    clean.shouldRunAfter(':common:publishToMavenLocal')
    build.shouldRunAfter(clean)
}